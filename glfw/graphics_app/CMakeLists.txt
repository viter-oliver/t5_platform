link_libraries(glfw)
link_libraries(json_lib)
link_libraries(imgui_lib)
link_libraries(message_lib)

include_directories(${GLFW_SOURCE_DIR}/include)
include_directories(${GLFW_SOURCE_DIR}/json)
include_directories(${GLFW_SOURCE_DIR}/msg_filters_n)
include_directories(${GLFW_SOURCE_DIR}/msg_host)
include_directories(${GLFW_SOURCE_DIR}/imgui)
include_directories(${GLFW_SOURCE_DIR}/imgui/af_control)
include_directories(${GLFW_SOURCE_DIR}/imgui/gl3w ${GLFW_SOURCE_DIR}/imgui/fab ${GLFW_SOURCE_DIR}/imgui/soil)
file(GLOB GP_CPP ./*.cpp)
if(_GLFW_WAYLAND)
message(STATUS,"it is waylande")
add_definitions(-DIMGUI_PLATFORM)
endif()
if(_GLFW_SCREEN)
message(STATUS,"it is screen")
if(QNX_VERSION<=660)
add_definitions(-DGLFW_INCLUDE_ES2)
else()
message(STATUS,"it is qnx700")
add_definitions(-DGLFW_INCLUDE_ES3)
endif()  
endif()
 
add_definitions(-DIMGUI_DISABLE_DEMO_WINDOWS)
add_executable(graphics_app ${GP_CPP})
set_target_properties(graphics_app PROPERTIES LINKER_LANGUAGE CXX)
if(_GLFW_SCREEN)
target_link_libraries(graphics_app EGL GLESv2 m screen)
else()
target_link_libraries(graphics_app wayland-client wayland-server wayland-cursor wayland-egl EGL GLESv2 m pthread dl)
endif()

